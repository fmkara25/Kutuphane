@model IEnumerable<Kutuphane.Models.Book>
@using Kutuphane.Models

@{
    ViewData["Title"] = "Kitaplarım";
}

<h1 class="mb-4">📚 Kitaplarım</h1>

<form method="get" class="row mb-4">
    <div class="col-md-5">
        <input name="search" class="form-control" placeholder="Kitap, yazar veya tür ara..." value="@ViewData["CurrentSearch"]" />
    </div>
    <div class="col-md-3">
        <select name="status" class="form-control">
            <option value="">Tüm Durumlar</option>
            @foreach (var status in Enum.GetValues(typeof(ReadingStatus)))
            {
                var selected = (ReadingStatus?)ViewData["CurrentStatus"] == (ReadingStatus)status;
                <option value="@status" selected="@(selected ? "selected" : null)">@status</option>
            }
        </select>
    </div>
    <div class="col-md-2">
        <button type="submit" class="btn btn-primary w-100">Filtrele</button>
    </div>
    <div class="col-md-2">
        <a href="@Url.Action("Create")" class="btn btn-success w-100">➕ Yeni Kitap</a>
    </div>
</form>

@if (!Model.Any())
{
    <div class="alert alert-info">Hiç kitap eklenmemiş.</div>
}
else
{
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var book in Model)
        {
            <div class="col">
                <div class="card h-100">
                    @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                    {
                        <img src="@book.CoverImageUrl" class="card-img-top" alt="Kapak görseli" style="height: 200px; object-fit: cover;" />
                    }
                    <div class="card-body">
                        <h5 class="card-title">@book.Title</h5>
                        <p class="card-text text-muted">@book.Author</p>
                        <p class="card-text"><strong>Tür:</strong> @book.Genre</p>
                        <p class="card-text"><strong>Durum:</strong> @book.Status</p>

                        @if (!string.IsNullOrEmpty(book.Notes))
                        {
                            <p class="card-text"><strong>Not:</strong> @book.Notes</p>
                        }

                        @if (book.PageCount.HasValue)
                        {
                            <p class="card-text"><strong>Sayfa:</strong> @book.PageCount</p>
                        }

                        @if (book.Rating.HasValue)
                        {
                            <p class="card-text"><strong>Puan:</strong> @book.Rating/5</p>
                        }

                        @if (book.Progress.HasValue)
                        {
                            <p class="card-text"><strong>İlerleme:</strong> @book.Progress%</p>
                        }

                        @if (book.IsFavorite)
                        {
                            <p class="card-text text-warning"><i class="bi bi-star-fill"></i> Favori</p>
                        }
                    </div>
                    <div class="card-footer d-flex justify-content-between">
                        <a href="@Url.Action("Edit", new { id = book.Id })" class="btn btn-sm btn-warning">Düzenle</a>
                        <a href="@Url.Action("Details", new { id = book.Id })" class="btn btn-sm btn-info">Detay</a>
                        <a href="@Url.Action("Delete", new { id = book.Id })" class="btn btn-sm btn-danger">Sil</a>
                    </div>
                </div>
            </div>
        }
    </div>
}
